"comment.line.percentage.erlang"
"constant.character.erlang"
"constant.language.erlang"
"constant.numeric.float.erlang"
"constant.numeric.integer.decimal.erlang"
"constant.numeric.integer.arity.erlang"
"constant.numeric.integer.binary-size.erlang"
"constant.numeric.integer.base-2.erlang"
"constant.numeric.integer.base-3.erlang"
"constant.numeric.integer.base-4.erlang"
"constant.numeric.integer.base-5.erlang"
"constant.numeric.integer.base-6.erlang"
"constant.numeric.integer.base-7.erlang"
"constant.numeric.integer.base-8.erlang"
"constant.numeric.integer.base-9.erlang"
"constant.numeric.integer.base-10.erlang"
"constant.numeric.integer.base-11.erlang"
"constant.numeric.integer.base-12.erlang"
"constant.numeric.integer.base-13.erlang"
"constant.numeric.integer.base-14.erlang"
"constant.numeric.integer.base-15.erlang"
"constant.numeric.integer.base-16.erlang"
"constant.numeric.integer.base-17.erlang"
"constant.numeric.integer.base-18.erlang"
"constant.numeric.integer.base-19.erlang"
"constant.numeric.integer.base-20.erlang"
"constant.numeric.integer.base-21.erlang"
"constant.numeric.integer.base-22.erlang"
"constant.numeric.integer.base-23.erlang"
"constant.numeric.integer.base-24.erlang"
"constant.numeric.integer.base-25.erlang"
"constant.numeric.integer.base-26.erlang"
"constant.numeric.integer.base-27.erlang"
"constant.numeric.integer.base-28.erlang"
"constant.numeric.integer.base-29.erlang"
"constant.numeric.integer.base-30.erlang"
"constant.numeric.integer.base-31.erlang"
"constant.numeric.integer.base-32.erlang"
"constant.numeric.integer.base-33.erlang"
"constant.numeric.integer.base-34.erlang"
"constant.numeric.integer.base-35.erlang"
"constant.numeric.integer.base-36.erlang"
"constant.other.atom.quoted.erlang"
"constant.other.atom.quoted.escape.erlang"
"constant.other.atom.unquoted.erlang"
"constant.other.placeholder.erlang"
"entity.name.function.spec.erlang"
"entity.name.function.definition.erlang"
"entity.name.function.call.erlang"
"entity.name.function.call.buildin.erlang"
"entity.name.function.qualifier.erlang"
"entity.name.function.qualifier.buildin.erlang"
"entity.name.tag.macro.erlang"
"entity.name.tag.macro.tokens.erlang"
"entity.name.type.spec.erlang"
"entity.name.type.basic.erlang"
"entity.name.type.buildin.erlang"
"entity.name.type.call.erlang"
"entity.name.type.module.erlang"
"entity.name.type.module.buildin.erlang"
"entity.name.type.module.definition.erlang"
"entity.name.type.qualifier.erlang"
"entity.name.type.record.erlang"
"entity.name.type.record.definition.erlang"
"entity.other.attribute-name.record-field.erlang"
"invalid.illegal.atom.erlang"
"invalid.illegal.character.erlang"
"invalid.illegal.integer.erlang"
"invalid.illegal.string.erlang"
"keyword.control.after.erlang"
"keyword.control.begin.erlang"
"keyword.control.case.erlang"
"keyword.control.catch.erlang"
"keyword.control.end.erlang"
"keyword.control.fun.erlang"
"keyword.control.if.erlang"
"keyword.control.of.erlang"
"keyword.control.other.erlang"
"keyword.control.receive.erlang"
"keyword.control.try.erlang"
"keyword.control.when.erlang"
"keyword.control.directive.behaviour.erlang"
"keyword.control.directive.define.erlang"
"keyword.control.directive.export.erlang"
"keyword.control.directive.export-type.erlang"
"keyword.control.directive.ifdef.erlang"
"keyword.control.directive.ifndef.erlang"
"keyword.control.directive.import.erlang"
"keyword.control.directive.module.erlang"
"keyword.control.directive.other.erlang"
"keyword.control.directive.record.erlang"
"keyword.control.directive.spec.erlang"
"keyword.control.directive.type.erlang"
"keyword.control.directive.undef.erlang"
"keyword.operator.macro.erlang"
"keyword.operator.record.erlang"
"keyword.operator.record-field.erlang"
"keyword.operator.map.erlang"
"keyword.operator.symbolic.erlang"
"keyword.operator.textual.erlang"
"punctuation.definition.atom.begin.erlang"
"punctuation.definition.atom.end.erlang"
"punctuation.definition.binary.begin.erlang"
"punctuation.definition.binary.end.erlang"
"punctuation.definition.directive.begin.erlang"
"punctuation.definition.directive.end.erlang"
"punctuation.definition.expression.begin.erlang"
"punctuation.definition.expression.end.erlang"
"punctuation.definition.function-arity-list.begin.erlang"
"punctuation.definition.function-arity-list.end.erlang"
"punctuation.definition.function.end.erlang"
"punctuation.definition.fun-type.any-args.erlang"
"punctuation.definition.fun-type.begin.erlang"
"punctuation.definition.fun-type.end.erlang"
"punctuation.definition.list.begin.erlang"
"punctuation.definition.list.end.erlang"
"punctuation.definition.macro.parameters.begin.erlang"
"punctuation.definition.macro.parameters.end.erlang"
"punctuation.definition.map.begin.erlang"
"punctuation.definition.map.end.erlang"
"punctuation.definition.parameters.begin.erlang"
"punctuation.definition.parameters.end.erlang"
"punctuation.definition.record.begin.erlang"
"punctuation.definition.record.end.erlang"
"punctuation.definition.string.begin.erlang"
"punctuation.definition.string.end.erlang"
"punctuation.definition.tuple.begin.erlang"
"punctuation.definition.tuple.end.erlang"
"punctuation.definition.type-arity-list.begin.erlang"
"punctuation.definition.type-arity-list.end.erlang"
"punctuation.separator.binary.elements.erlang"
"punctuation.separator.binary.size.erlang"
"punctuation.separator.binary.specifier.erlang"
"punctuation.separator.binary.specifier-elements.erlang"
"punctuation.separator.clauses.erlang"
"punctuation.separator.clause-head-body.erlang"
"punctuation.separator.define-value.erlang"
"punctuation.separator.equals.erlang"
"punctuation.separator.expressions.erlang"
"punctuation.separator.fields.erlang"
"punctuation.separator.function-arity.erlang"
"punctuation.separator.guards.erlang"
"punctuation.separator.lc.erlang"
"punctuation.separator.list.elements.erlang"
"punctuation.separator.list.head.erlang"
"punctuation.separator.module-qualifier.erlang"
"punctuation.separator.parameters.erlang"
"punctuation.separator.range.erlang"
"punctuation.separator.tuple.erlang"
"punctuation.separator.type.alternatives.erlang"
"punctuation.separator.type-arity.erlang"
"punctuation.separator.type.value.erlang"
"storage.modifier.endianness.erlang"
"storage.modifier.signedness.erlang"
"storage.modifier.unit.erlang"
"storage.type.erlang"
"string.quoted.double.erlang"
"string.quoted.double.escape.erlang"
"variable.other.erlang"
"variable.language.omitted.erlang"
"variable.parameter.macro.erlang"
"variable.parameter.macro.definition.erlang"